{"version":3,"sources":["i18n.jsx","views/InformationCreationForm.jsx","views/ProgramDesign.jsx","index.jsx"],"names":["i18n","use","initReactI18next","init","resources","en","translation","enTranslation","interpolation","escapeValue","lng","fallbackLng","InformationCreationForm","onCreation","noop","useState","newInformationName","setNewInformationName","t","useTranslation","type","value","onChange","event","target","onClick","name","ProgramDesign","informations","setInformations","map","information","newInformation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAKAA,IACGC,IAAIC,KACJC,KAAK,CACJC,UAAW,CACTC,GAAI,CAAEC,YAAaC,IAErBC,cAAe,CACbC,aAAa,GAEfC,IAAK,KACLC,YAAa,O,0CCXV,SAASC,EAAT,GAAyD,IAAD,IAArBC,kBAAqB,MAARC,OAAQ,IACTC,mBAAS,IADA,mBACtDC,EADsD,KAClCC,EADkC,KAErDC,EAAMC,cAAND,EAUR,OACE,iCACE,uBACEE,KAAK,OACLC,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAWN,EAAsBM,EAAMC,OAAOH,UAE1D,wBACED,KAAK,SACLK,QAjBoB,WAIxBZ,EAHuB,CACrBa,KAAMV,IAGRC,EAAsB,KAUpB,SAIGC,EAAE,kCCvBJ,SAASS,IAAiB,IAAD,EACUZ,mBAAS,IADnB,mBACvBa,EADuB,KACTC,EADS,KAG9B,OACE,qCACE,6BACGD,EAAaE,KAAI,SAACC,GAAD,OAChB,6BACGA,EAAYL,YAInB,cAACd,EAAD,CACEC,WAAY,SAACmB,GAAD,OAAoBH,EAAgB,GAAD,mBAAKD,GAAL,CAAmBI,W,MCT1EC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACR,EAAD,MAEFS,SAASC,eAAe,W","file":"static/js/main.b28fb13b.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport enTranslation from './translations/en.json';\n\ni18n\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: { translation: enTranslation },\n    },\n    interpolation: {\n      escapeValue: false,\n    },\n    lng: 'en',\n    fallbackLng: 'en',\n  });\n","import { noop } from 'lodash';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport function InformationCreationForm({ onCreation = noop }) {\n  const [newInformationName, setNewInformationName] = useState('');\n  const { t } = useTranslation();\n\n  const createInformation = () => {\n    const newInformation = {\n      name: newInformationName,\n    };\n    onCreation(newInformation);\n    setNewInformationName('');\n  };\n\n  return (\n    <form>\n      <input\n        type=\"text\"\n        value={newInformationName}\n        onChange={(event) => setNewInformationName(event.target.value)}\n      />\n      <button\n        type=\"button\"\n        onClick={createInformation}\n      >\n        {t('create-information-action')}\n      </button>\n    </form>\n  );\n}\n","import React, { useState } from 'react';\n\nimport { InformationCreationForm } from './InformationCreationForm';\n\nexport function ProgramDesign() {\n  const [informations, setInformations] = useState([]);\n\n  return (\n    <>\n      <ul>\n        {informations.map((information) => (\n          <li>\n            {information.name}\n          </li>\n        ))}\n      </ul>\n      <InformationCreationForm\n        onCreation={(newInformation) => setInformations([...informations, newInformation])}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './i18n';\nimport { ProgramDesign } from './views/ProgramDesign';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ProgramDesign />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}