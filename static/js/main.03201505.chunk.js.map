{"version":3,"sources":["i18n.jsx","views/InformationCreationForm.jsx","views/RelationCreationForm.jsx","views/ProgramDesign.jsx","index.jsx"],"names":["i18n","use","initReactI18next","init","resources","en","translation","enTranslation","interpolation","escapeValue","lng","fallbackLng","InformationCreationForm","onCreation","noop","useState","name","setName","t","useTranslation","type","value","onChange","event","target","onClick","relationTypes","RelationCreationForm","informations","memberA","setMemberA","memberB","setMemberB","setType","map","information","relationType","ProgramDesign","setInformations","relations","setRelations","withoutFp","newInformation","relation","newRelation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qVAKAA,IACGC,IAAIC,KACJC,KAAK,CACJC,UAAW,CACTC,GAAI,CAAEC,YAAaC,IAErBC,cAAe,CACbC,aAAa,GAEfC,IAAK,KACLC,YAAa,O,gDCXV,SAASC,EAAT,GAAyD,IAAD,IAArBC,kBAAqB,MAARC,OAAQ,IACrCC,mBAAS,IAD4B,mBACtDC,EADsD,KAChDC,EADgD,KAErDC,EAAMC,cAAND,EAUR,OACE,iCACE,uBACEE,KAAK,OACLC,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAWN,EAAQM,EAAMC,OAAOH,UAE5C,wBACED,KAAK,SACLK,QAjBoB,WAIxBZ,EAHuB,CACrBG,SAGFC,EAAQ,KAUN,SAIGC,EAAE,kCCvBX,IAAMQ,EAAgB,CACpB,YAGK,SAASC,EAAT,GAGH,IAAD,cAFDd,kBAEC,MAFYC,OAEZ,MADDc,oBACC,MADc,GACd,IAK6Bb,mBAAQ,oBAACa,EAAa,UAAd,aAAC,EAAiBZ,YAAlB,QAA0B,IAL/D,mBAKMa,EALN,KAKeC,EALf,OAM6Bf,mBAAQ,oBAACa,EAAa,UAAd,aAAC,EAAiBZ,YAAlB,QAA0B,IAN/D,mBAMMe,EANN,KAMeC,EANf,OAOuBjB,mBAAQ,UAACW,EAAc,UAAf,QAAqB,IAPpD,mBAOMN,EAPN,KAOYa,EAPZ,KAQOf,EAAMC,cAAND,EAiBR,OACE,iCACE,wBACEG,MAAOQ,EACPP,SAAU,SAACC,GAAD,OAAWO,EAAWP,EAAMC,OAAOH,QAF/C,SAIGO,EAAaM,KAAI,SAACC,GAAD,OAChB,wBAEEd,MAAOc,EAAYnB,KAFrB,SAIGmB,EAAYnB,MAHRmB,EAAYnB,WAOvB,wBACEK,MAAOU,EACPT,SAAU,SAACC,GAAD,OAAWS,EAAWT,EAAMC,OAAOH,QAF/C,SAIGO,EAAaM,KAAI,SAACC,GAAD,OAChB,wBAEEd,MAAOc,EAAYnB,KAFrB,SAIGmB,EAAYnB,MAHRmB,EAAYnB,WAOvB,wBACEK,MAAOD,EACPE,SAAU,SAACC,GAAD,OAAWU,EAAQV,EAAMC,OAAOH,QAF5C,SAIGK,EAAcQ,KAAI,SAACE,GAAD,OACjB,wBAEEf,MAAOe,EAFT,SAIGA,GAHIA,QAOX,wBACEhB,KAAK,SACLK,QA1DiB,WACfI,GAAWE,GAAWX,IAQ5BP,EALoB,CAClBgB,UACAE,UACAX,SAGFU,EAAW,IACXE,EAAW,IACXC,EAAQ,MA4CN,SAIGf,EAAE,+BC3EJ,SAASmB,IAAiB,IAAD,EACUtB,mBAAS,IADnB,mBACvBa,EADuB,KACTU,EADS,OAEIvB,mBAAS,IAFb,mBAEvBwB,EAFuB,KAEZC,EAFY,KAI9B,OACE,qCACE,6BACGZ,EAAaM,KAAI,SAACC,GAAD,OAChB,+BACGA,EAAYnB,KACb,wBACEI,KAAK,SACLK,QAAS,kBAAMa,EAAgBG,kBAAU,CAACN,MAF5C,sBAFOA,EAAYnB,WAWzB,cAACJ,EAAD,CACEC,WAAY,SAAC6B,GAAD,OAAoBJ,EAAgB,GAAD,mBAAKV,GAAL,CAAmBc,QAEpE,6BACGH,EAAUL,KAAI,SAACS,GAAD,OACb,+BACGA,EAASd,QADZ,IAGGc,EAASZ,QAHZ,IAKGY,EAASvB,aAIhB,cAACO,EAAD,CACEC,aAAcA,EACdf,WAAY,SAAC+B,GAAD,OAAiBJ,EAAa,GAAD,mBAAKD,GAAL,CAAgBK,W,MCjCjEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACV,EAAD,MAEFW,SAASC,eAAe,W","file":"static/js/main.03201505.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport enTranslation from './translations/en.json';\n\ni18n\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: { translation: enTranslation },\n    },\n    interpolation: {\n      escapeValue: false,\n    },\n    lng: 'en',\n    fallbackLng: 'en',\n  });\n","import { noop } from 'lodash';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport function InformationCreationForm({ onCreation = noop }) {\n  const [name, setName] = useState('');\n  const { t } = useTranslation();\n\n  const createInformation = () => {\n    const newInformation = {\n      name,\n    };\n    onCreation(newInformation);\n    setName('');\n  };\n\n  return (\n    <form>\n      <input\n        type=\"text\"\n        value={name}\n        onChange={(event) => setName(event.target.value)}\n      />\n      <button\n        type=\"button\"\n        onClick={createInformation}\n      >\n        {t('create-information-action')}\n      </button>\n    </form>\n  );\n}\n","import { noop } from 'lodash';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst relationTypes = [\n  'equality',\n];\n\nexport function RelationCreationForm({\n  onCreation = noop,\n  informations = [],\n}) {\n  // TODO: Put default values?\n  // FIX: onChange is not called when the input is created.\n  // therefore the state is not mutated.\n\n  const [memberA, setMemberA] = useState(informations[0]?.name ?? '');\n  const [memberB, setMemberB] = useState(informations[1]?.name ?? '');\n  const [type, setType] = useState(relationTypes[0] ?? '');\n  const { t } = useTranslation();\n\n  const createRelation = () => {\n    if (!(memberA && memberB && type)) {\n      return;\n    }\n    const newRelation = {\n      memberA,\n      memberB,\n      type,\n    };\n    onCreation(newRelation);\n    setMemberA('');\n    setMemberB('');\n    setType('');\n  };\n\n  return (\n    <form>\n      <select\n        value={memberA}\n        onChange={(event) => setMemberA(event.target.value)}\n      >\n        {informations.map((information) => (\n          <option\n            key={information.name}\n            value={information.name}\n          >\n            {information.name}\n          </option>\n        ))}\n      </select>\n      <select\n        value={memberB}\n        onChange={(event) => setMemberB(event.target.value)}\n      >\n        {informations.map((information) => (\n          <option\n            key={information.name}\n            value={information.name}\n          >\n            {information.name}\n          </option>\n        ))}\n      </select>\n      <select\n        value={type}\n        onChange={(event) => setType(event.target.value)}\n      >\n        {relationTypes.map((relationType) => (\n          <option\n            key={relationType}\n            value={relationType}\n          >\n            {relationType}\n          </option>\n        ))}\n      </select>\n      <button\n        type=\"button\"\n        onClick={createRelation}\n      >\n        {t('create-relation-action')}\n      </button>\n    </form>\n  );\n}\n","import React, { useState } from 'react';\nimport { without as withoutFp } from 'lodash/fp';\n\nimport { InformationCreationForm } from './InformationCreationForm';\nimport { RelationCreationForm } from './RelationCreationForm';\n\nexport function ProgramDesign() {\n  const [informations, setInformations] = useState([]);\n  const [relations, setRelations] = useState([]);\n\n  return (\n    <>\n      <ul>\n        {informations.map((information) => (\n          <li key={information.name}>\n            {information.name}\n            <button\n              type=\"button\"\n              onClick={() => setInformations(withoutFp([information]))}\n            >\n              remove\n            </button>\n          </li>\n        ))}\n      </ul>\n      <InformationCreationForm\n        onCreation={(newInformation) => setInformations([...informations, newInformation])}\n      />\n      <ul>\n        {relations.map((relation) => (\n          <li>\n            {relation.memberA}\n            -\n            {relation.memberB}\n            -\n            {relation.type}\n          </li>\n        ))}\n      </ul>\n      <RelationCreationForm\n        informations={informations}\n        onCreation={(newRelation) => setRelations([...relations, newRelation])}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './i18n';\nimport { ProgramDesign } from './views/ProgramDesign';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ProgramDesign />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}